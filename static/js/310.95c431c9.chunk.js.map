{"version":3,"file":"static/js/310.95c431c9.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/myApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  background-color: black;\n  border-radius: 3px;\n  overflow: hidden;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\n\nexport const MoviesInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  background-color: black;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n  color: orange;\n  &::placeholder {\n    font-size: 18px;\n  }\n  &::selection {\n    color: black;\n    background: orange;\n  }\n`;\n\nexport const MoviesBtn = styled.button`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 0;\n  background: orange;\n  background-image: url('https://cdn-icons-png.flaticon.com/128/8443/8443367.png');\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    background-size: 55%;\n  }\n`;\n\nexport const BtnIcon = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n  background-color: transparent;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin: 0;\n  padding-left: 0;\n  padding-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  list-style: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieImage = styled.img`\n  box-shadow: 3px 3px 9px black;\n  width: 250px;\n  height: 400px;\n  border-radius: 50px;\n`;\nexport const MovieParagrapher = styled.p`\n  text-align: center;\n  color: gray;\n  font-family: 'Caveat Brush';\n  font-size: 20px;\n  margin-bottom: 7px;\n  margin-top: 0;\n  width: 250px;\n`;\nexport const MovieRate = styled.p`\n  text-align: center;\n  color: orange;\n  font-family: 'Caveat Brush';\n  font-size: 20px;\n  border: 1px solid black;\n  background-color: black;\n  margin: 0 auto;\n  width: 50px;\n  border-radius: 5px;\n`;\n","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  MoviesForm,\n  MoviesInput,\n  MoviesBtn,\n  BtnIcon,\n  MovieItem,\n  MovieImage,\n  MovieParagrapher,\n  MovieRate,\n  MovieList,\n} from './Movies.styled';\nimport { getSearchedQuery } from '../../services/myApi';\n\nconst Movies = () => {\n  const [search, setSearch] = useSearchParams();\n  const [searchInput, setSearchInput] = useState('');\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const location = useLocation();\n  const query = search.get('query');\n  const page = search.get('page');\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearch({ query: searchInput });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    getSearchedQuery(query, page).then(data => setSearchedMovies(data.results));\n  }, [query, page]);\n  return (\n    <>\n      <MoviesForm onSubmit={onFormSubmit}>\n        <MoviesInput\n          type=\"text\"\n          name=\"searchInput\"\n          value={searchInput}\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Your may contain only letters without spaces.\"\n          required\n          onChange={e => setSearchInput(e.target.value)}\n        />\n        <MoviesBtn type=\"submit\">\n          <BtnIcon>Search</BtnIcon>\n        </MoviesBtn>\n      </MoviesForm>\n      <MovieList>\n        {searchedMovies.map(({ title, id, vote_average, poster_path }) => {\n          return (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <MovieImage\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : 'https://westsiderc.org/wp-content/uploads/2019/08/Image-Not-Available.png'\n                  }\n                  alt={title}\n                />\n              </Link>\n              <MovieParagrapher>{title}</MovieParagrapher>\n              <MovieRate>{vote_average.toFixed(1)}</MovieRate>\n            </MovieItem>\n          );\n        })}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '3fda262e4e265cf3e0f035e612dee2c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovie = async page => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n      params: {\n        page: page,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n      {\n        params: {\n          query: query,\n          page: page,\n        },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["MoviesForm","styled","MoviesInput","MoviesBtn","BtnIcon","MovieList","MovieItem","MovieImage","MovieParagrapher","MovieRate","useSearchParams","search","setSearch","useState","searchInput","setSearchInput","searchedMovies","setSearchedMovies","location","useLocation","query","get","page","useEffect","getSearchedQuery","then","data","results","onSubmit","e","preventDefault","type","name","value","autoComplete","pattern","title","required","onChange","target","map","id","vote_average","poster_path","to","state","from","src","alt","toFixed","API_KEY","axios","getTrendMovie","params","console","log","getSearchedDetails","movieId","getMovieCast","getMovieReview"],"sourceRoot":""}
{"version":3,"file":"static/js/328.5991d8cd.chunk.js","mappings":"yOAEaA,EAAWC,EAAAA,GAAAA,GAAH,sHAORC,EAAWD,EAAAA,GAAAA,GAAH,6CAGRE,EAAYF,EAAAA,GAAAA,IAAH,qHAMTG,EAAkBH,EAAAA,GAAAA,EAAH,6KASfI,EAAWJ,EAAAA,GAAAA,KAAH,yC,SCuBrB,EAxCa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAaI,EAAKC,KAAtB,GAEhC,GAAE,KAED,+BACE,SAACf,EAAD,UACGS,EAAUO,KACT,YAA6D,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC5C,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IACEH,EAAY,0CAC2BA,GACnC,4EAENI,IAAKL,KAEP,UAACd,EAAD,YACE,SAACC,EAAD,oBADF,IAC8Ba,MAE9B,UAACd,EAAD,YACE,SAACC,EAAD,yBADF,IACmCY,MAEnC,UAACb,EAAD,YACE,SAACC,EAAD,0BADF,IACoCe,EAAWI,QAAQ,QAhB1CH,EAoBlB,OAKV,C,4MC9CKI,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,WAAMC,GAAN,kGAEFF,IAAAA,IAAA,sCAAyCD,GAAW,CACzEI,OAAQ,CACND,KAAMA,KAJe,uBAEjBd,EAFiB,EAEjBA,KAFiB,kBAOlBA,GAPkB,gCASzBgB,QAAQC,IAAR,MATyB,yDAAH,sDAabC,EAAgB,mCAAG,WAAOC,EAAOL,GAAd,kGAELF,IAAAA,IAAA,gCACID,EADJ,8CAErB,CACEI,OAAQ,CACNI,MAAOA,EACPL,KAAMA,KAPgB,uBAEpBd,EAFoB,EAEpBA,KAFoB,kBAWrBA,GAXqB,gCAa5BgB,QAAQC,IAAR,MAb4B,yDAAH,wDAiBhBG,EAAkB,mCAAG,WAAM5B,GAAN,kGAEPoB,IAAAA,IAAA,iBACXpB,EADW,oBACQmB,EADR,oBAFO,uBAEtBX,EAFsB,EAEtBA,KAFsB,kBAKvBA,GALuB,gCAO9BgB,QAAQC,IAAR,MAP8B,yDAAH,sDAWlBnB,EAAY,mCAAG,WAAMN,GAAN,kGAEDoB,IAAAA,IAAA,iBACXpB,EADW,4BACgBmB,EADhB,oBAFC,uBAEhBX,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBgB,QAAQC,IAAR,MAPwB,yDAAH,sDAWZI,EAAc,mCAAG,WAAM7B,GAAN,kGAEHoB,IAAAA,IAAA,gBACZpB,EADY,4BACemB,EADf,oBAFG,uBAElBX,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BgB,QAAQC,IAAR,MAP0B,yDAAH,qD","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx","services/myApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin: 0;\n`;\nexport const CastItem = styled.li`\n  list-style: none;\n`;\nexport const CastImage = styled.img`\n  box-shadow: 3px 3px 9px black;\n  width: 250px;\n  height: 400px;\n  border-radius: 50px;\n`;\nexport const CastParagrapher = styled.p`\n  width: 250px;\n  text-align: center;\n  color: gray;\n  font-family: 'Caveat Brush';\n  font-size: 20px;\n  margin-bottom: 0;\n  margin-top: 5px;\n`;\nexport const SpanWrap = styled.span`\n  color: black;\n`;\n","import { getMovieCast } from '../../services/myApi';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  CastList,\n  CastItem,\n  CastImage,\n  CastParagrapher,\n  SpanWrap,\n} from './Cast.styled';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n  useEffect(() => {\n    getMovieCast(movieId).then(data => setMovieCast(data.cast));\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <>\n      <CastList>\n        {movieCast.map(\n          ({ character, name, profile_path, popularity, cast_id }) => {\n            return (\n              <CastItem key={cast_id}>\n                <CastImage\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://westsiderc.org/wp-content/uploads/2019/08/Image-Not-Available.png'\n                  }\n                  alt={name}\n                />\n                <CastParagrapher>\n                  <SpanWrap>Name:</SpanWrap> {name}\n                </CastParagrapher>\n                <CastParagrapher>\n                  <SpanWrap>Character:</SpanWrap> {character}\n                </CastParagrapher>\n                <CastParagrapher>\n                  <SpanWrap>Popularity:</SpanWrap> {popularity.toFixed(1)}\n                </CastParagrapher>\n              </CastItem>\n            );\n          }\n        )}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '3fda262e4e265cf3e0f035e612dee2c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovie = async page => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n      params: {\n        page: page,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n      {\n        params: {\n          query: query,\n          page: page,\n        },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["CastList","styled","CastItem","CastImage","CastParagrapher","SpanWrap","movieId","useParams","useState","movieCast","setMovieCast","useEffect","getMovieCast","then","data","cast","map","character","name","profile_path","popularity","cast_id","src","alt","toFixed","API_KEY","axios","getTrendMovie","page","params","console","log","getSearchedQuery","query","getSearchedDetails","getMovieReview"],"sourceRoot":""}
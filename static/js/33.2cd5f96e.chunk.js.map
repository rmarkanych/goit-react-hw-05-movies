{"version":3,"file":"static/js/33.2cd5f96e.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/myApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\nexport const Item = styled.li`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n`;\nexport const BtnBack = styled(Link)`\n  display: flex;\n  max-width: 40px;\n  max-height: 40px;\n  padding: 10px;\n  margin-left: 20px;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  font-size: 40px;\n  text-decoration: none;\n  background-color: orange;\n  border-radius: 7px;\n  color: black;\n  font-family: 'Caveat Brush';\n  &.active {\n    color: gray;\n  }\n  :focus-visible:not(.active),\n  :hover:not(.active) {\n    color: gray;\n  }\n`;\nexport const MainWrap = styled.div`\n  background-color: black;\n  max-width: 1125px;\n  margin: 0 auto;\n  border-radius: 50px;\n  max-height: 735px;\n  box-shadow: 3px 3px 9px black;\n`;\nexport const Image = styled.img`\n  max-width: 400px;\n  margin: 0;\n  border-top-left-radius: 50px;\n  border-bottom-left-radius: 50px;\n  max-height: 725px;\n`;\nexport const MovieWrapper = styled.div`\n  margin-left: 20px;\n  margin-top: 20px;\n`;\nexport const Title = styled.h1`\n  font-family: 'Caveat Brush';\n  font-size: 40px;\n  color: orange;\n  margin: 0;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\nexport const ScoreParagrapher = styled.p`\n  font-family: 'Caveat Brush';\n  font-size: 40px;\n  color: orange;\n  margin: 0;\n  color: #fbab7e;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const OverviewTitle = styled.h2`\n  font-family: 'Caveat Brush';\n  color: orange;\n  font-size: 40px;\n  margin: 0;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\nexport const GenresTitle = styled.h2`\n  font-family: 'Caveat Brush';\n  font-size: 40px;\n  color: orange;\n  margin: 0;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\nexport const OverviewParagrapher = styled.p`\n  font-family: 'Caveat Brush';\n  max-width: 700px;\n  color: orange;\n  font-size: 30px;\n  margin: 0;\n  color: #fbab7e;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\nexport const GenresParapher = styled.p`\n  font-family: 'Caveat Brush';\n  font-size: 40px;\n  color: orange;\n  margin: 0;\n  color: #fbab7e;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const BtnWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 50px;\n`;\n\nexport const NavBtn = styled(NavLink)`\n  padding: 5px 15px;\n  font-size: 30px;\n  margin-bottom: 20px;\n  text-decoration: none;\n  background-color: orange;\n  border-radius: 7px;\n  color: black;\n  font-family: 'Caveat Brush';\n  &.active {\n    color: gray;\n  }\n  :focus-visible:not(.active),\n  :hover:not(.active) {\n    color: gray;\n    transform: scale(1.05);\n  }\n`;\nexport const InfoTitle = styled.h2`\n  font-family: 'Caveat Brush';\n  font-size: 30px;\n  display: block;\n  text-align: center;\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getSearchedDetails } from '../../services/myApi';\nimport { useEffect, useState } from 'react';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Item,\n  Image,\n  MovieWrapper,\n  Title,\n  ScoreParagrapher,\n  OverviewTitle,\n  OverviewParagrapher,\n  GenresTitle,\n  GenresParapher,\n  MainWrap,\n  NavBtn,\n  BtnWrap,\n  BtnBack,\n  InfoTitle,\n} from './MovieDetails.styled';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    getSearchedDetails(movieId).then(data => setMovie(data));\n    // eslint-disable-next-line\n  }, []);\n  if (movie === null) return;\n\n  const {\n    original_title,\n    poster_path,\n    overview,\n    genres,\n    vote_average,\n    id,\n    release_date,\n  } = movie;\n  const data = new Date(release_date);\n  const year = data.getFullYear();\n\n  return (\n    <>\n      <BtnBack to={backLinkHref} state={{ from: backLinkHref }}>\n        {' '}\n        â†©{' '}\n      </BtnBack>\n      <MainWrap>\n        <Item key={id}>\n          <Image\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : 'https://westsiderc.org/wp-content/uploads/2019/08/Image-Not-Available.png'\n            }\n            alt=\"dasdas\"\n          />\n          <MovieWrapper>\n            <Title>\n              {original_title} ({year})\n            </Title>\n            <ScoreParagrapher>\n              User Score: {((vote_average * 100) / 10).toFixed(1)}%\n            </ScoreParagrapher>\n            <OverviewTitle>Overview:</OverviewTitle>\n            <OverviewParagrapher>{overview}</OverviewParagrapher>\n            <GenresTitle>Genres:</GenresTitle>\n            <GenresParapher>\n              {genres.map(({ name }) => name + ' ')}\n            </GenresParapher>\n          </MovieWrapper>\n        </Item>\n      </MainWrap>\n      <InfoTitle>Additional information</InfoTitle>\n      <BtnWrap>\n        <NavBtn to={`/movies/${id}/cast`} state={{ from: backLinkHref }}>\n          Cast\n        </NavBtn>\n        <NavBtn to={`/movies/${id}/reviews`} state={{ from: backLinkHref }}>\n          Review\n        </NavBtn>\n      </BtnWrap>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst API_KEY = '3fda262e4e265cf3e0f035e612dee2c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovie = async page => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n      params: {\n        page: page,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n      {\n        params: {\n          query: query,\n          page: page,\n        },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Item","styled","BtnBack","Link","MainWrap","Image","MovieWrapper","Title","ScoreParagrapher","OverviewTitle","GenresTitle","OverviewParagrapher","GenresParapher","BtnWrap","NavBtn","NavLink","InfoTitle","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","getSearchedDetails","then","data","original_title","poster_path","overview","genres","vote_average","id","release_date","year","Date","getFullYear","to","src","alt","toFixed","map","name","Suspense","fallback","Loader","API_KEY","axios","getTrendMovie","page","params","console","log","getSearchedQuery","query","getMovieCast","getMovieReview"],"sourceRoot":""}
{"version":3,"file":"static/js/693.aef4e86a.chunk.js","mappings":"2OAEaA,EAAaC,EAAAA,GAAAA,GAAH,8DAIVC,EAAaD,EAAAA,GAAAA,EAAH,sHAMVE,EAAaF,EAAAA,GAAAA,GAAH,qEAIVG,EAAaH,EAAAA,GAAAA,GAAH,sHAOVI,EAAgBJ,EAAAA,GAAAA,EAAH,0FAMbK,EAAoBL,EAAAA,GAAAA,KAAH,wC,4BCqB9B,EArCgB,WACd,OAAsCM,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAeM,EAAKC,QAAxB,GAElC,GAAE,KAGD,SAAChB,EAAD,UAC0B,IAAvBQ,EAAYS,QACX,SAACf,EAAD,oEAEAM,EAAYU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAClC,OACE,UAAClB,EAAD,YACE,UAACC,EAAD,YACE,SAACE,EAAD,uBADF,IACmDa,MAEnD,UAACd,EAAD,YACE,SAACC,EAAD,uBACA,SAAC,IAAD,CACEgB,UAAW,IACXC,aAAc,mBACdC,aAAc,mBAHhB,SAKGJ,SAXUC,EAgBpB,KAIR,C,4MC9CKI,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,WAAMC,GAAN,kGAEFF,IAAAA,IAAA,sCAAyCD,GAAW,CACzEI,OAAQ,CACND,KAAMA,KAJe,uBAEjBb,EAFiB,EAEjBA,KAFiB,kBAOlBA,GAPkB,gCASzBe,QAAQC,IAAR,MATyB,yDAAH,sDAabC,EAAgB,mCAAG,WAAOC,EAAOL,GAAd,kGAELF,IAAAA,IAAA,gCACID,EADJ,8CAErB,CACEI,OAAQ,CACNI,MAAOA,EACPL,KAAMA,KAPgB,uBAEpBb,EAFoB,EAEpBA,KAFoB,kBAWrBA,GAXqB,gCAa5Be,QAAQC,IAAR,MAb4B,yDAAH,wDAiBhBG,EAAkB,mCAAG,WAAMxB,GAAN,kGAEPgB,IAAAA,IAAA,iBACXhB,EADW,oBACQe,EADR,oBAFO,uBAEtBV,EAFsB,EAEtBA,KAFsB,kBAKvBA,GALuB,gCAO9Be,QAAQC,IAAR,MAP8B,yDAAH,sDAWlBI,EAAY,mCAAG,WAAMzB,GAAN,kGAEDgB,IAAAA,IAAA,iBACXhB,EADW,4BACgBe,EADhB,oBAFC,uBAEhBV,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBe,QAAQC,IAAR,MAPwB,yDAAH,sDAWZlB,EAAc,mCAAG,WAAMH,GAAN,kGAEHgB,IAAAA,IAAA,gBACZhB,EADY,4BACee,EADf,oBAFG,uBAElBV,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1Be,QAAQC,IAAR,MAP0B,yDAAH,qD","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","services/myApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  margin-top: 0;\n  padding: 0 20px;\n`;\nexport const ErrorTitle = styled.p`\n  font-size: 40px;\n  font-family: 'Caveat Brush';\n  display: block;\n  text-align: center;\n`;\nexport const ReviewItem = styled.li`\n  list-style: none;\n  margin-bottom: 10px;\n`;\nexport const AuthorName = styled.h2`\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 32px;\n  font-family: 'Caveat Brush';\n`;\n\nexport const ReviewContent = styled.p`\n  margin: 0;\n  font-size: 28px;\n  font-family: 'Caveat Brush';\n`;\n\nexport const ReviewTextWrapper = styled.span`\n  color: gray;\n`;\n","import { getMovieReview } from '../../services/myApi';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  ReviewList,\n  ErrorTitle,\n  ReviewItem,\n  AuthorName,\n  ReviewContent,\n  ReviewTextWrapper,\n} from './Reviews.styled';\nimport ReactReadMoreReadLess from 'react-read-more-read-less';\n\nconst Reviews = () => {\n  const [movieReview, setMovieReview] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieReview(movieId).then(data => setMovieReview(data.results));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ReviewList>\n      {movieReview.length === 0 ? (\n        <ErrorTitle>We don't have any reviews for this movie ðŸ˜¢</ErrorTitle>\n      ) : (\n        movieReview.map(({ author, content, id }) => {\n          return (\n            <ReviewItem key={id}>\n              <AuthorName>\n                <ReviewTextWrapper>Author: </ReviewTextWrapper> {author}\n              </AuthorName>\n              <ReviewContent>\n                <ReviewTextWrapper>Review:</ReviewTextWrapper>\n                <ReactReadMoreReadLess\n                  charLimit={1000}\n                  readMoreText={'Read more â–¼'}\n                  readLessText={'Read less â–²'}\n                >\n                  {content}\n                </ReactReadMoreReadLess>\n              </ReviewContent>\n            </ReviewItem>\n          );\n        })\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '3fda262e4e265cf3e0f035e612dee2c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovie = async page => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`, {\n      params: {\n        page: page,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n      {\n        params: {\n          query: query,\n          page: page,\n        },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchedDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ReviewList","styled","ErrorTitle","ReviewItem","AuthorName","ReviewContent","ReviewTextWrapper","useState","movieReview","setMovieReview","movieId","useParams","useEffect","getMovieReview","then","data","results","length","map","author","content","id","charLimit","readMoreText","readLessText","API_KEY","axios","getTrendMovie","page","params","console","log","getSearchedQuery","query","getSearchedDetails","getMovieCast"],"sourceRoot":""}